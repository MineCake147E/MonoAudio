<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonoAudio.Core</name>
    </assembly>
    <members>
        <member name="T:MonoAudio.IAggregator`2">
            <summary>
            Defines a base infrastructure of a filter.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TAggregator">The type of the aggregator.</typeparam>
        </member>
        <member name="P:MonoAudio.IAggregator`2.BaseSource">
            <summary>
            Gets the base source.
            </summary>
            <value>
            The base source.
            </value>
        </member>
        <member name="T:MonoAudio.IAudioSource">
            <summary>
            Defines a base infrastructure for all audio sources.
            </summary>
        </member>
        <member name="P:MonoAudio.IAudioSource.CanSeek">
            <summary>
            Gets or sets whether the <see cref="T:MonoAudio.IAudioSource"/> supports seeking or not.
            </summary>
        </member>
        <member name="P:MonoAudio.IAudioSource.Format">
            <summary>
            Gets the format.
            </summary>
            <value>
            The format.
            </value>
        </member>
        <member name="P:MonoAudio.IAudioSource.Position">
            <summary>
            Gets or sets where the <see cref="T:MonoAudio.IAudioSource"/> is.
            Some implementation could not support this property.
            </summary>
        </member>
        <member name="P:MonoAudio.IAudioSource.Length">
            <summary>
            Gets how long the <see cref="T:MonoAudio.IAudioSource"/> lasts in Bytes.
            -1 Means Infinity.
            </summary>
        </member>
        <member name="T:MonoAudio.IReadableAudioSource`1">
            <summary>
            Defines a base infrastructure of a readable audio source.
            </summary>
            <typeparam name="T">The type of audio data.</typeparam>
            <seealso cref="T:MonoAudio.IAudioSource" />
        </member>
        <member name="M:MonoAudio.IReadableAudioSource`1.Read(System.Span{`0})">
            <summary>
            Reads the audio using the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns></returns>
        </member>
        <member name="T:MonoAudio.ISampleSource">
            <summary>
            Defines a base infrastructure of a IEEE 754 Floating-Point PCM audio source.
            </summary>
            <seealso cref="T:MonoAudio.IReadableAudioSource`1" />
        </member>
        <member name="T:MonoAudio.ISampleAggregator">
            <summary>
            Defines a base infrastructure of a IEEE 754 Floating-Point PCM audio filter.
            </summary>
            <seealso cref="T:MonoAudio.IAggregator`2" />
        </member>
        <member name="T:MonoAudio.IWaveSource">
            <summary>
            Defines a base infrastructure of a raw audio data source.
            </summary>
            <seealso cref="T:MonoAudio.IReadableAudioSource`1" />
        </member>
        <member name="T:MonoAudio.IWaveAggregator">
            <summary>
            Defines a base infrastructure of a raw audio data filter.
            </summary>
            <seealso cref="T:MonoAudio.IAggregator`2" />
        </member>
        <member name="T:MonoAudio.SoundOut.ISoundOut">
            <summary>
            Defines a base infrastructure of a sound output.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:MonoAudio.SoundOut.ISoundOut.Play">
            <summary>
            Starts the audio playback.
            </summary>
        </member>
        <member name="M:MonoAudio.SoundOut.ISoundOut.Pause">
            <summary>
            Pauses the audio playback.
            </summary>
        </member>
        <member name="M:MonoAudio.SoundOut.ISoundOut.Resume">
            <summary>
            Resumes the audio playback.
            </summary>
        </member>
        <member name="M:MonoAudio.SoundOut.ISoundOut.Stop">
            <summary>
            Stops the audio playback.
            </summary>
        </member>
        <member name="M:MonoAudio.SoundOut.ISoundOut.Initialize(MonoAudio.IWaveSource)">
            <summary>
            Initializes the <see cref="T:MonoAudio.SoundOut.ISoundOut"/> for playing a <paramref name="source"/>.
            </summary>
            <param name="source">The source to play.</param>
        </member>
        <member name="P:MonoAudio.SoundOut.ISoundOut.PlaybackState">
            <summary>
            Gets the state of the playback.
            </summary>
            <value>
            The state of the playback.
            </value>
        </member>
        <member name="T:MonoAudio.SoundOut.PlaybackState">
            <summary>
            Represents a state of playback.
            </summary>
        </member>
        <member name="F:MonoAudio.SoundOut.PlaybackState.Stopped">
            <summary>
            The playback is stopped.
            </summary>
        </member>
        <member name="F:MonoAudio.SoundOut.PlaybackState.Playing">
            <summary>
            The playback is running.
            </summary>
        </member>
        <member name="F:MonoAudio.SoundOut.PlaybackState.Paused">
            <summary>
            The playback is paused.
            </summary>
        </member>
        <member name="T:MonoAudio.WaveFormat">
            <summary>
            Represents a format of wave data.
            </summary>
        </member>
        <member name="P:MonoAudio.WaveFormat.AudioEncoding">
            <summary>
            Gets the audio encoding.
            </summary>
            <value>
            The audio encoding.
            </value>
        </member>
        <member name="P:MonoAudio.WaveFormat.Channels">
            <summary>
            Gets the channels.
            </summary>
            <value>
            The channels.
            </value>
        </member>
        <member name="P:MonoAudio.WaveFormat.SampleRate">
            <summary>
            Gets the sample rate[Samples/s].
            </summary>
            <value>
            The sample rate.
            </value>
        </member>
        <member name="P:MonoAudio.WaveFormat.ByteRate">
            <summary>
            Gets the byte rate[Bytes/s].
            </summary>
            <value>
            The byte rate.
            </value>
        </member>
        <member name="P:MonoAudio.WaveFormat.BlockAlign">
            <summary>
            Gets the block align.
            </summary>
            <value>
            The block align.
            </value>
        </member>
        <member name="P:MonoAudio.WaveFormat.BitsPerSample">
            <summary>
            Gets the bit depth of samples.
            </summary>
            <value>
            The bit depth of samples.
            </value>
        </member>
        <member name="P:MonoAudio.WaveFormat.FooterLength">
            <summary>
            Gets the length of the footer.
            </summary>
            <value>
            The length of the footer.
            </value>
        </member>
    </members>
</doc>

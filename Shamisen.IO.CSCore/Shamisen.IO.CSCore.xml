<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Shamisen.IO.CSCore</name>
    </assembly>
    <members>
        <member name="T:Shamisen.IO.CSCoreDeviceEnumerator">
            <summary>
            Enumerates the devices available on <see cref="N:CSCore"/>.
            </summary>
            <seealso cref="T:Shamisen.IO.IAudioDeviceEnumerator" />
        </member>
        <member name="M:Shamisen.IO.CSCoreDeviceEnumerator.EnumerateDevicesAsync(Shamisen.IO.DataFlow)">
            <summary>
            Enumerates devices of specified <paramref name="dataFlow" /> asynchronously.
            </summary>
            <param name="dataFlow">The <see cref="T:Shamisen.IO.DataFlow" /> kind to enumerate devices of.</param>
            <returns>
            The <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> of audio devices.
            </returns>
        </member>
        <member name="M:Shamisen.IO.CSCoreDeviceEnumerator.EnumerateDevices(Shamisen.IO.DataFlow)">
            <summary>
            Enumerates devices of specified <paramref name="dataFlow" />.
            </summary>
            <param name="dataFlow">The <see cref="T:Shamisen.IO.DataFlow" /> kind to enumerate devices of.</param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1" /> of audio devices.
            </returns>
        </member>
        <member name="T:Shamisen.IO.CSCoreInteroperatingWaveSource">
            <summary>
            Inter-operate with CSCore to output the audio data.
            </summary>
            <seealso cref="T:CSCore.IWaveSource" />
        </member>
        <member name="M:Shamisen.IO.CSCoreInteroperatingWaveSource.#ctor(Shamisen.IWaveSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Shamisen.IO.CSCoreInteroperatingWaveSource"/> class.
            </summary>
            <param name="source">The source.</param>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="P:Shamisen.IO.CSCoreInteroperatingWaveSource.Source">
            <summary>
            Gets the source to read the audio from.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Shamisen.IO.CSCoreInteroperatingWaveSource.WaveFormat">
            <summary>
            Gets the format of the audio data.
            </summary>
            <value>
            The format of the audio data.
            </value>
        </member>
        <member name="P:Shamisen.IO.CSCoreInteroperatingWaveSource.Position">
            <summary>
            Gets or sets where the <see cref="T:CSCore.IWaveSource"/> is.
            Some implementation could not support this property.
            </summary>
        </member>
        <member name="P:Shamisen.IO.CSCoreInteroperatingWaveSource.Length">
            <summary>
            Gets how long the <see cref="T:CSCore.IWaveSource"/> lasts in specific types.
            -1 Means Infinity.
            </summary>
        </member>
        <member name="P:Shamisen.IO.CSCoreInteroperatingWaveSource.CanSeek">
            <summary>
            Gets a value indicating whether this instance can seek.
            </summary>
            <value>
              <c>true</c> if this instance can seek; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Shamisen.IO.CSCoreInteroperatingWaveSource.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the audio to the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset to overwrite the <paramref name="buffer"/>.</param>
            <param name="count">The number of bytes to overwrite the <paramref name="buffer"/>.</param>
            <returns>The number of bytes read.</returns>
        </member>
        <member name="M:Shamisen.IO.CSCoreInteroperatingWaveSource.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Shamisen.IO.CSCoreSoundOutput">
            <summary>
            Provides a functionality for playing sound using CSCore.
            </summary>
            <seealso cref="T:Shamisen.IO.ISoundOut" />
        </member>
        <member name="M:Shamisen.IO.CSCoreSoundOutput.#ctor(CSCore.SoundOut.ISoundOut)">
            <summary>
            Initializes a new instance of the <see cref="T:Shamisen.IO.CSCoreSoundOutput"/> class.
            </summary>
            <param name="backend">The actual backend.</param>
            <exception cref="T:System.ArgumentNullException">backend</exception>
        </member>
        <member name="P:Shamisen.IO.CSCoreSoundOutput.Backend">
            <summary>
            Gets the actual backend.
            </summary>
            <value>
            The backend.
            </value>
        </member>
        <member name="P:Shamisen.IO.CSCoreSoundOutput.PlaybackState">
            <summary>
            Gets the state of the playback.
            </summary>
            <value>
            The state of the playback.
            </value>
        </member>
        <member name="M:Shamisen.IO.CSCoreSoundOutput.Initialize(Shamisen.IWaveSource)">
            <summary>
            Initializes the <see cref="T:Shamisen.IO.ISoundOut" /> for playing a <paramref name="source" />.
            </summary>
            <param name="source">The source to play.</param>
        </member>
        <member name="M:Shamisen.IO.CSCoreSoundOutput.Pause">
            <summary>
            Pauses the audio playback.
            </summary>
        </member>
        <member name="M:Shamisen.IO.CSCoreSoundOutput.Play">
            <summary>
            Starts the audio playback.
            </summary>
        </member>
        <member name="M:Shamisen.IO.CSCoreSoundOutput.Resume">
            <summary>
            Resumes the audio playback.
            </summary>
        </member>
        <member name="M:Shamisen.IO.CSCoreSoundOutput.Stop">
            <summary>
            Stops the audio playback.
            </summary>
        </member>
        <member name="M:Shamisen.IO.CSCoreSoundOutput.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Shamisen.IO.Devices.CSCoreMMDevice">
            <summary>
            Represents a device for <see cref="T:CSCore.SoundOut.WasapiOut"/>.
            </summary>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.#ctor(CSCore.CoreAudioAPI.MMDevice)">
             <summary>
            
             </summary>
             <param name="device"></param>
        </member>
        <member name="P:Shamisen.IO.Devices.CSCoreMMDevice.Name">
            <summary>
            Gets the name of this audio device.
            </summary>
            <value>
            The name of this audio device.
            </value>
        </member>
        <member name="P:Shamisen.IO.Devices.CSCoreMMDevice.Device">
            <summary>
            Gets the actual device.
            </summary>
            <value>
            The device.
            </value>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.CheckSupportStatus(Shamisen.IWaveFormat,Shamisen.IO.IOExclusivity)">
            <summary>
            Indicates whether the audio output device supports a particular stream format.
            </summary>
            <param name="format">The format to judge the availability.</param>
            <param name="mode">The share mode.</param>
            <returns>
            The value which indicates how the <see cref="T:Shamisen.IWaveFormat" /> can be supported by <see cref="N:Shamisen" />.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.CheckInternalSupport(CSCore.CoreAudioAPI.AudioClient,CSCore.WaveFormat)">
            <summary>
            false if NOT supported
            </summary>
            <param name="ac"></param>
            <param name="closet"></param>
            <returns></returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.CreateSoundOut(System.TimeSpan)">
            <summary>
            Creates the <see cref="T:Shamisen.IO.ISoundOut" /> that outputs audio to this device.
            </summary>
            <param name="latency">The desired latency for output.</param>
            <returns>
            The <see cref="T:Shamisen.IO.CSCoreSoundOutput"/> instance.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.CreateSoundOut(System.TimeSpan,Shamisen.IO.IOExclusivity)">
            <summary>
            Creates the <see cref="T:Shamisen.IO.ISoundOut" /> that outputs audio to this device with the specified <paramref name="mode" />.
            </summary>
            <param name="latency">The latency.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>
              <c>true</c> if the current object is equal to the obj parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.Equals(Shamisen.IO.Devices.CSCoreMMDevice)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.op_Equality(Shamisen.IO.Devices.CSCoreMMDevice,Shamisen.IO.Devices.CSCoreMMDevice)">
            <summary>
            Indicates whether the values of two specified <see cref="T:Shamisen.IO.Devices.CSCoreMMDevice"/> objects are equal.
            </summary>
            <param name="left">The first <see cref="T:Shamisen.IO.Devices.CSCoreMMDevice"/> to compare.</param>
            <param name="right">The second <see cref="T:Shamisen.IO.Devices.CSCoreMMDevice"/> to compare.</param>
            <returns>
              <c>true</c> if the left is the same as the right; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.op_Inequality(Shamisen.IO.Devices.CSCoreMMDevice,Shamisen.IO.Devices.CSCoreMMDevice)">
            <summary>
            Indicates whether the values of two specified <see cref="T:Shamisen.IO.Devices.CSCoreMMDevice"/> objects are not equal.
            </summary>
            <param name="left">The first <see cref="T:Shamisen.IO.Devices.CSCoreMMDevice"/> to compare.</param>
            <param name="right">The second  <see cref="T:Shamisen.IO.Devices.CSCoreMMDevice"/> to compare.</param>
            <returns>
              <c>true</c> if left and right are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreMMDevice.Equals(Shamisen.IO.IAudioDevice)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Shamisen.IO.Devices.CSCoreWaveOutDevice">
            <summary>
            Represents a device that is available on <see cref="T:CSCore.SoundOut.WaveOut"/>.
            </summary>
            <seealso cref="T:Shamisen.IO.IAudioOutputDevice`1" />
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.#ctor(CSCore.SoundOut.WaveOutDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Shamisen.IO.Devices.CSCoreWaveOutDevice"/> struct.
            </summary>
            <param name="device">The device.</param>
            <exception cref="T:System.ArgumentNullException">device</exception>
        </member>
        <member name="P:Shamisen.IO.Devices.CSCoreWaveOutDevice.Name">
            <summary>
            Gets the name of this audio device.
            </summary>
            <value>
            The name of this audio device.
            </value>
        </member>
        <member name="P:Shamisen.IO.Devices.CSCoreWaveOutDevice.Device">
            <summary>
            Gets the actual device.
            </summary>
            <value>
            The device.
            </value>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.CheckSupportStatus(Shamisen.IWaveFormat)">
            <summary>
            Indicates whether the audio output device supports a particular stream format.
            </summary>
            <param name="format">The format to judge the availability.</param>
            <returns>
            The value which indicates how the <see cref="T:Shamisen.IWaveFormat" /> can be supported by <see cref="N:Shamisen" />.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.CheckSupportStatus(Shamisen.IWaveFormat,Shamisen.IO.IOExclusivity)">
            <summary>
            Indicates whether the audio output device supports a particular stream format.
            </summary>
            <param name="format">The format to judge the availability.</param>
            <param name="mode">The share mode.</param>
            <returns>
            The value which indicates how the <see cref="T:Shamisen.Formats.IWaveFormat" /> can be supported by <see cref="N:Shamisen" />.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.CreateSoundOut(System.TimeSpan)">
            <summary>
            Creates the <see cref="T:Shamisen.IO.ISoundOut" /> that outputs audio to this device.
            </summary>
            <param name="latency">The desired latency for output.</param>
            <returns>
            The <see cref="T:Shamisen.IO.Devices.CSCoreWaveOutDevice"/> instance.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.CreateSoundOut(System.TimeSpan,Shamisen.IO.IOExclusivity)">
            <summary>
            Creates the <see cref="T:Shamisen.IO.ISoundOut" /> that outputs audio to this device with the specified <paramref name="mode" />.
            </summary>
            <param name="latency">The latency.</param>
            <param name="mode">The share mode.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>
              <c>true</c> if the current object is equal to the obj parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.Equals(Shamisen.IO.Devices.CSCoreWaveOutDevice)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.Equals(Shamisen.IO.IAudioDevice)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.op_Equality(Shamisen.IO.Devices.CSCoreWaveOutDevice,Shamisen.IO.Devices.CSCoreWaveOutDevice)">
            <summary>
            Indicates whether the values of two specified <see cref="T:Shamisen.IO.Devices.CSCoreWaveOutDevice"/> objects are equal.
            </summary>
            <param name="left">The first <see cref="T:Shamisen.IO.Devices.CSCoreWaveOutDevice"/> to compare.</param>
            <param name="right">The second <see cref="T:Shamisen.IO.Devices.CSCoreWaveOutDevice"/> to compare.</param>
            <returns>
              <c>true</c> if the left is the same as the right; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Shamisen.IO.Devices.CSCoreWaveOutDevice.op_Inequality(Shamisen.IO.Devices.CSCoreWaveOutDevice,Shamisen.IO.Devices.CSCoreWaveOutDevice)">
            <summary>
            Indicates whether the values of two specified <see cref="T:Shamisen.IO.Devices.CSCoreWaveOutDevice"/> objects are not equal.
            </summary>
            <param name="left">The first <see cref="T:Shamisen.IO.Devices.CSCoreWaveOutDevice"/> to compare.</param>
            <param name="right">The second  <see cref="T:Shamisen.IO.Devices.CSCoreWaveOutDevice"/> to compare.</param>
            <returns>
              <c>true</c> if left and right are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
    </members>
</doc>
